# Test generated by RoostGPT for test credential-wallet-rest-assured using AI Type Azure Open AI and AI Model roost-gpt4-32k


# Test generated for /recipients/branches/{id}_get for http method type GET in artillery framework

# RoostTestHash=061355b093


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "branches_id_get_others.csv"
    fields:
      - "id"
    skipHeader: true
  headers:
    Token: "{{$processEnvironment.AUTH_TOKEN}}"
scenarios:
  - name: "Fetch branch details with invalid payloads or authentication issues"
    flow:
      # Requesting a branch detail with a valid id but incorrect token
      - get:
          url: "/recipients/branches/{{ id }}"
          headers:
            Token: "IncorrectToken"
          expect:
            - statusCode: 401   # Expecting Unauthorized status code
            - hasProperty: "message"
            - equals:
                - "message"
                - "Invalid Token"
          think: 1
          
      # Requesting a branch detail with an invalid id
      - get:
          url: "/recipients/branches/InvalidId"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 404   # Expecting Not Found status code
            - hasProperty: "message"
            - equals:
                - "message"
                - "Branch Not Found"
          think: 1
          
      # Requesting a branch detail with a missing id
      - get:
          url: "/recipients/branches/"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 400   # Expecting Bad Request status code
            - hasProperty: "message"
            - equals:
                - "message"
                - "Missing Branch ID"
          think: 1

      # Requesting a non-existing endpoint
      - get:
          url: "/recipients/branches/{{ id }}/nonexistentpath"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 404  # Expecting Not Found status code due to non-existing endpoint
            - hasProperty: "message"
            - equals:
                - "message"
                - "Endpoint Not Found"
          think: 1
  