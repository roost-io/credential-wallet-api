# ********RoostGPT********
# Test generated by RoostGPT for test credential-wallet-rest-assured using AI Type Azure Open AI and AI Model roost-gpt4-32k

# Test generated for /credentials/{id}_delete for http method type DELETE in artillery framework
# RoostTestHash=f1fc1d06f7



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "credentials_id_delete_others.csv"
    fields:
      - "id"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Non successful API requests scenario"
    flow:
      - log: "Request - Deleting Credential with an Invalid UUID"
        delete: 
          url: "/credentials/{{ id }}"
          headers:
            "Token": "{{$processEnvironment.AUTH_TOKEN}}"
          beforeRequest: "logRequest"
        expect:
          - statusCode: 404
          - hasHeader: "application/json"
          - hasProperty: "message"
          - matchesRegexp: ["message", "^Endpoint /v1/wallet/keyPair/{id} not found$"]
        think: 1

      - log: "Request - Deleting Credential with Empty UUID"
        delete: 
          url: "/credentials/"
          headers:
            "Token": "{{$processEnvironment.AUTH_TOKEN}}"
        expect:
          - statusCode: 400
          - hasHeader: "application/json"
          - hasProperty: "message"
          - matchesRegexp: ["message", "^Endpoint /v1/wallet/keyPair/{id} not found$"]
        think: 1

      - log: "Request - Deleting Credential at incorrect URL"
        delete: 
          url: "/credentialS/{{ id }}"
          headers:
            "Token": "{{$processEnvironment.AUTH_TOKEN}}"
        expect:
          - statusCode: 404
          - hasHeader: "application/json"
          - hasProperty: "message"
          - matchesRegexp: ["message", "^Endpoint /v1/wallet/keyPair/{id} not found$"]
        think: 1

      - log: "Request - Deleting Credential at with invalid authentication"
        delete: 
          url: "/credentials/{{ id }}"
          headers:
            "Token": "INVALID_TOKEN"
        expect:
          - statusCode: 401
          - hasHeader: "application/json"
          - hasProperty: "message"
          - matchesRegexp: ["message", "^Unauthorized - Invalid Token$"]
        think: 1
