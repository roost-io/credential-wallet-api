# Test generated by RoostGPT for test credential-wallet-rest-assured using AI Type Azure Open AI and AI Model roost-gpt4-32k


# RoostTestHash=2758affb7e

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  headers:
    Token: "{{ $processEnvironment.AUTH_TOKEN }}"
  payload:
    path: "accounts_patch_others.csv"
    fields:
      - "email"
    skipHeader: true
  processor: "./my-processor.js"

scenarios:
  - name: "Negative tests for /accounts"
    flow:
      - post:
          url: "/accounts"
          headers:
            Content-Type: "application/json"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 400
        # Asserts expected failure when trying to post to "/accounts"
            - hasProperty: "description"
            - hasProperty: "error"
          capture:
            - json: "$.version"
              as: "apiVersion"
        think: 1
      - log: "Posted to /accounts with invalid email. Expected status code 400."

      - post:
          url: "/incorrect/endpoint"
          headers:
            Content-Type: "application/json"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 404
        # Asserts expected failure when trying to post on a non-existent endpoint
        think: 1
      - log: "Posted to incorrect endpoint. Expected status code 404."

      - patch:
          url: "/accounts?id={{ email }}"
          headers:
            Content-Type: "application/json"
          json:
            email: "{{ email }}"
          expect:
            - statusCode: 405
        # Asserts expected failure when trying to patch "/accounts" without proper authorization
        think: 1
      - log: "Tried patching /accounts without proper authorization. Expected status code 405."

      - get:
          url: "/accounts?id={{ email }}"
          expect:
            - statusCode: 500
        # Asserts expected failure when trying to get "/accounts" without an existing ID
        think: 1
      - log: "Tried getting /accounts without an existing ID. Expected status code 500."
