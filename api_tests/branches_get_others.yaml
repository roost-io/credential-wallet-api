# Test generated by RoostGPT for test credential-wallet-rest-assured using AI Type Azure Open AI and AI Model roost-gpt4-32k


# Test generated for /recipients/branches_get for http method type GET in artillery framework

# RoostTestHash=74a40da00e


# Artillery YAML Test Script for Non-Success API Responses
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "branches_get_others.csv"
    skipHeader: true
    fields:
      - "coc-number"
      - "coc-branch-number"
      - "trade-name"
      - "size"
      - "offset"

scenarios:
  - name: "API Non-Success Responses Scenario"
    flow:
      # Test for invalid URL
      - get:
          url: "/invalid-url"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 404
          think: 1

      # Test for unauthorized access
      - get:
          url: "/recipients/branches"
          expect:
            - statusCode: 403
          think: 1

      # Test for invalid payload
      - post:
          url: "/recipients/branches"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          json:
            invalidpayload: {}
          expect:
            - statusCode: 400
          think: 1

      # Test for invalid COC number (edge case)
      - get:
          url: "/recipients/branches?coc-number={{ invalid_coc_number }}"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 400
          think: 1
      
      # Test for non-existing branch number
      - get:
          url: "/recipients/branches?coc-branch-number={{ non_existing_branch_number }}"
          headers:
            Token: "{{$processEnvironment.AUTH_TOKEN}}"
          expect:
            - statusCode: 404
          think: 1

      # Test for invalid authentication token usage
      - patch:
          url: "/recipients/branches/{{ branch_id }}"
          headers:
            Token: "invalidtoken"
          json:
            someField: "someValue"
          expect:
            - statusCode: 401
          think: 1
