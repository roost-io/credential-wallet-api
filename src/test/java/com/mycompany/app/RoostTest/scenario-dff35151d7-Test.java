// ********RoostGPT********
/*
Test generated by RoostGPT for test credential-integration-artillery using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: 'Given the base URL is "http://localhost:8080"',
  rule: null,
  scenario: 'Create my account \r\n' +
    '    When the client sends a POST request "/accounts" with the accounts_body payload\r\n' +
    '    Then create an account with the specified informatio\r\n' +
    '    And verify the account created using GET request for "/me"',
  title: 'Create my account'
}

*/

// ********RoostGPT********
package com.mycompany.app.RoostTest;

import io.restassured.RestAssured;
import io.restassured.http.Headers;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import org.json.JSONObject;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

import static org.junit.Assert.assertEquals;

public class scenario_dff35151d7_Test {

    public String baseUrl = System.getenv(("API_HOST"));
    
    @Test
    public void Create_my_account() throws IOException {
        BufferedReader br = new BufferedReader(new FileReader("src/test/java/com/mycompany/app/RoostTest/scenario-dff35151d7-Test.csv"));
        String line;
        while ((line = br.readLine()) != null) {
            String[] payload = line.split("\\^\\|\\^");
            String method = payload[0];
            String url = payload[1].replace(baseUrl, "");
            Headers headers = new Headers(payload[2]);
            JSONObject requestBody = new JSONObject(payload[3]);
            int expectedResponseCode = Integer.parseInt(payload[4]);
            String expectedResponseBody = payload[5];

            RequestSpecification request = RestAssured.given();
            request.headers(headers.toString());
            request.body(requestBody.toString());

            Response response = null;
            if (method.equals("post")) {
                response = request.post(url);
            } else if (method.equals("get")) {
                response = request.get(url);
            }

            int responseCode = response.getStatusCode();
            String responseBody = response.getBody().asString();

            assertEquals(expectedResponseCode, responseCode);
            assertEquals(expectedResponseBody, responseBody);
        }
        br.close();
    }
}
